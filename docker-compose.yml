version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: paper-trading-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: paper-trading
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - trading-network

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: paper-trading-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading-network

  # Backend API
  api:
    build: .
    container_name: paper-trading-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/paper-trading?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      ZERODHA_API_KEY: your_api_key
      ZERODHA_API_SECRET: your_api_secret
      ZERODHA_REDIRECT_URI: http://localhost:3000/auth/callback
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - trading-network

  # Frontend Client
  client:
    build: ./client
    container_name: paper-trading-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    depends_on:
      - api
    networks:
      - trading-network

volumes:
  mongodb_data:
  redis_data:

networks:
  trading-network:
    driver: bridge
